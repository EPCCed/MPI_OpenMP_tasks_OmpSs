targetDP
========

Copyright 2015 The University of Edinburgh

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. 

About
----------

targetDP (target Data Parallel) is a lightweight programming
abstraction layer, designed to allow the same application source code
to be able to target multiple architectures, e.g. NVIDIA GPUs and
multicore/manycore CPUs, in a performance portable manner.

See:

 Alan Gray and Kevin Stratford. “targetDP: an Abstraction of Lattice
 Based Parallelism with Portable Performance”. In: Proceedings of 2014
 IEEE International Conference on High Performance Computing and
 Communications (HPCC) (2014), pp. 312–315. doi:
 10.1109/HPCC.2014.212, http://arxiv.org/abs/1405.6162


Obtaining
----------

To obtain a copy of targetDP:
svn checkout http://ccpforge.cse.rl.ac.uk/svn/ludwig/trunk/targetDP

Note that this is the latest development version, and is subject to change.


Compiling the targetDP libraries
---------- 

to create the library libtarget.a:

Edit the Makefile to set CC to the desired compiler (and CFLAGS to the
desired compiler flags). Then type

make

If CC is a standard C/C++ compiler, then the CPU version of targetDP.a
will be created. If CC=nvcc, then the GPU version will be created.


Documentation/Specification
----------

See targetDPspec.pdf in the doc directory, and the example (below).


Example
----------

See simpleExample.c (which has compilation instructions for CPU and
GPU near the top of the file).


 